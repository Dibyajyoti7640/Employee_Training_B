// <auto-generated />
using System;
using Employee_Training_B.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Employee_Training_B.Migrations
{
    [DbContext(typeof(EmpTdsContext))]
    [Migration("20250603121705_initialMigration")]
    partial class initialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Employee_Training_B.Models.AssessmentResponse", b =>
                {
                    b.Property<int>("ResponseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ResponseId"));

                    b.Property<int?>("AssessmentId")
                        .HasColumnType("int");

                    b.Property<string>("ResponseText")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("SubmittedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("ResponseId")
                        .HasName("PK__Assessme__1AAA646C47B9A261");

                    b.HasIndex("AssessmentId");

                    b.HasIndex("UserId");

                    b.ToTable("AssessmentResponses");
                });

            modelBuilder.Entity("Employee_Training_B.Models.Notification", b =>
                {
                    b.Property<int>("NotificationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NotificationId"));

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool?>("IsRead")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("NotificationId")
                        .HasName("PK__Notifica__20CF2E12C290B0A9");

                    b.HasIndex("UserId");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("Employee_Training_B.Models.Registration", b =>
                {
                    b.Property<int>("RegistrationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RegistrationId"));

                    b.Property<int?>("ProgramId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("RegisteredAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Status")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("Registered");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("RegistrationId")
                        .HasName("PK__Registra__6EF5881087798976");

                    b.HasIndex("ProgramId");

                    b.HasIndex("UserId");

                    b.ToTable("Registrations");
                });

            modelBuilder.Entity("Employee_Training_B.Models.Report", b =>
                {
                    b.Property<int>("ReportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReportId"));

                    b.Property<int?>("GeneratedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ReportDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("ReportType")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ReportUrl")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("ReportURL");

                    b.HasKey("ReportId")
                        .HasName("PK__Reports__D5BD48052D733480");

                    b.HasIndex("GeneratedBy");

                    b.ToTable("Reports");
                });

            modelBuilder.Entity("Employee_Training_B.Models.TrainingAssessment", b =>
                {
                    b.Property<int>("AssessmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AssessmentId"));

                    b.Property<string>("AnswerType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("ProgramId")
                        .HasColumnType("int");

                    b.Property<string>("QuestionText")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("AssessmentId")
                        .HasName("PK__Training__3D2BF81EF101923C");

                    b.HasIndex("ProgramId");

                    b.ToTable("TrainingAssessments");
                });

            modelBuilder.Entity("Employee_Training_B.Models.TrainingCertificate", b =>
                {
                    b.Property<int>("CertificateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CertificateId"));

                    b.Property<string>("CertificateUrl")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("CertificateURL");

                    b.Property<DateTime?>("IssuedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("ProgramId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("CertificateId")
                        .HasName("PK__Training__BBF8A7C10FCAF69D");

                    b.HasIndex("ProgramId");

                    b.HasIndex("UserId");

                    b.ToTable("TrainingCertificates");
                });

            modelBuilder.Entity("Employee_Training_B.Models.TrainingFeedback", b =>
                {
                    b.Property<int>("FeedbackId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FeedbackId"));

                    b.Property<string>("Comments")
                        .HasColumnType("text");

                    b.Property<int?>("ProgramId")
                        .HasColumnType("int");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<DateTime?>("SubmittedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("FeedbackId")
                        .HasName("PK__Training__6A4BEDD6859365D0");

                    b.HasIndex("ProgramId");

                    b.HasIndex("UserId");

                    b.ToTable("TrainingFeedback", (string)null);
                });

            modelBuilder.Entity("Employee_Training_B.Models.TrainingProgram", b =>
                {
                    b.Property<int>("ProgramId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProgramId"));

                    b.Property<string>("Category")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("DurationHours")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("ManagedBy")
                        .HasColumnType("int");

                    b.Property<int?>("MaxParticipants")
                        .HasColumnType("int");

                    b.Property<string>("Mode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Trainer")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ProgramId")
                        .HasName("PK__Training__75256058AA08864C");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("ManagedBy");

                    b.ToTable("TrainingPrograms");
                });

            modelBuilder.Entity("Employee_Training_B.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Department")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("UserId")
                        .HasName("PK__Users__1788CC4CB8E6F9F3");

                    b.HasIndex(new[] { "Email" }, "UQ__Users__A9D1053470EA5E0F")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Employee_Training_B.Models.AssessmentResponse", b =>
                {
                    b.HasOne("Employee_Training_B.Models.TrainingAssessment", "Assessment")
                        .WithMany("AssessmentResponses")
                        .HasForeignKey("AssessmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK__Assessmen__Asses__571DF1D5");

                    b.HasOne("Employee_Training_B.Models.User", "User")
                        .WithMany("AssessmentResponses")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK__Assessmen__UserI__5812160E");

                    b.Navigation("Assessment");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Employee_Training_B.Models.Notification", b =>
                {
                    b.HasOne("Employee_Training_B.Models.User", "User")
                        .WithMany("Notifications")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK__Notificat__UserI__5BE2A6F2");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Employee_Training_B.Models.Registration", b =>
                {
                    b.HasOne("Employee_Training_B.Models.TrainingProgram", "Program")
                        .WithMany("Registrations")
                        .HasForeignKey("ProgramId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK__Registrat__Progr__4316F928");

                    b.HasOne("Employee_Training_B.Models.User", "User")
                        .WithMany("Registrations")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK__Registrat__UserI__4222D4EF");

                    b.Navigation("Program");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Employee_Training_B.Models.Report", b =>
                {
                    b.HasOne("Employee_Training_B.Models.User", "GeneratedByNavigation")
                        .WithMany("Reports")
                        .HasForeignKey("GeneratedBy")
                        .HasConstraintName("FK__Reports__Generat__60A75C0F");

                    b.Navigation("GeneratedByNavigation");
                });

            modelBuilder.Entity("Employee_Training_B.Models.TrainingAssessment", b =>
                {
                    b.HasOne("Employee_Training_B.Models.TrainingProgram", "Program")
                        .WithMany("TrainingAssessments")
                        .HasForeignKey("ProgramId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK__TrainingA__Progr__534D60F1");

                    b.Navigation("Program");
                });

            modelBuilder.Entity("Employee_Training_B.Models.TrainingCertificate", b =>
                {
                    b.HasOne("Employee_Training_B.Models.TrainingProgram", "Program")
                        .WithMany("TrainingCertificates")
                        .HasForeignKey("ProgramId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK__TrainingC__Progr__49C3F6B7");

                    b.HasOne("Employee_Training_B.Models.User", "User")
                        .WithMany("TrainingCertificates")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK__TrainingC__UserI__48CFD27E");

                    b.Navigation("Program");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Employee_Training_B.Models.TrainingFeedback", b =>
                {
                    b.HasOne("Employee_Training_B.Models.TrainingProgram", "Program")
                        .WithMany("TrainingFeedbacks")
                        .HasForeignKey("ProgramId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK__TrainingF__Progr__4E88ABD4");

                    b.HasOne("Employee_Training_B.Models.User", "User")
                        .WithMany("TrainingFeedbacks")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK__TrainingF__UserI__4D94879B");

                    b.Navigation("Program");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Employee_Training_B.Models.TrainingProgram", b =>
                {
                    b.HasOne("Employee_Training_B.Models.User", "CreatedByNavigation")
                        .WithMany("TrainingProgramCreatedByNavigations")
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("FK__TrainingP__Creat__3D5E1FD2");

                    b.HasOne("Employee_Training_B.Models.User", "ManagedByNavigation")
                        .WithMany("TrainingProgramManagedByNavigations")
                        .HasForeignKey("ManagedBy")
                        .HasConstraintName("FK__TrainingP__Manag__3F466844");

                    b.Navigation("CreatedByNavigation");

                    b.Navigation("ManagedByNavigation");
                });

            modelBuilder.Entity("Employee_Training_B.Models.TrainingAssessment", b =>
                {
                    b.Navigation("AssessmentResponses");
                });

            modelBuilder.Entity("Employee_Training_B.Models.TrainingProgram", b =>
                {
                    b.Navigation("Registrations");

                    b.Navigation("TrainingAssessments");

                    b.Navigation("TrainingCertificates");

                    b.Navigation("TrainingFeedbacks");
                });

            modelBuilder.Entity("Employee_Training_B.Models.User", b =>
                {
                    b.Navigation("AssessmentResponses");

                    b.Navigation("Notifications");

                    b.Navigation("Registrations");

                    b.Navigation("Reports");

                    b.Navigation("TrainingCertificates");

                    b.Navigation("TrainingFeedbacks");

                    b.Navigation("TrainingProgramCreatedByNavigations");

                    b.Navigation("TrainingProgramManagedByNavigations");
                });
#pragma warning restore 612, 618
        }
    }
}
